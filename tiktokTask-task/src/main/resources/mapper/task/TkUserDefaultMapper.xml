<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tiktok.task.mapper.TkUserDefaultMapper">
    
    <resultMap type="TkUserDefault" id="TkUserDefaultResult">
        <result property="id"    column="id"    />
        <result property="experienceTaskCount"    column="experience_task_count"    />
        <result property="regularTaskCount"    column="regular_task_count"    />
        <result property="hiddenTaskCount"    column="hidden_task_count"    />
        <result property="minimumWithdrawalAmount"    column="minimum_withdrawal_amount"    />
        <result property="blockchain"    column="blockchain"    />
    </resultMap>

    <sql id="selectTkUserDefaultVo">
        select id, experience_task_count, regular_task_count, hidden_task_count, minimum_withdrawal_amount, blockchain from tk_user_default
    </sql>

    <select id="selectTkUserDefaultList" parameterType="TkUserDefault" resultMap="TkUserDefaultResult">
        <include refid="selectTkUserDefaultVo"/>
        <where>  
            <if test="experienceTaskCount != null "> and experience_task_count = #{experienceTaskCount}</if>
            <if test="regularTaskCount != null "> and regular_task_count = #{regularTaskCount}</if>
            <if test="hiddenTaskCount != null "> and hidden_task_count = #{hiddenTaskCount}</if>
            <if test="minimumWithdrawalAmount != null  and minimumWithdrawalAmount != ''"> and minimum_withdrawal_amount = #{minimumWithdrawalAmount}</if>
            <if test="blockchain != null "> and blockchain = #{blockchain}</if>
        </where>
    </select>
    
    <select id="selectTkUserDefaultById" parameterType="Long" resultMap="TkUserDefaultResult">
        <include refid="selectTkUserDefaultVo"/>
        where id = #{id}
    </select>

    <insert id="insertTkUserDefault" parameterType="TkUserDefault">
        insert into tk_user_default
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="experienceTaskCount != null">experience_task_count,</if>
            <if test="regularTaskCount != null">regular_task_count,</if>
            <if test="hiddenTaskCount != null">hidden_task_count,</if>
            <if test="minimumWithdrawalAmount != null">minimum_withdrawal_amount,</if>
            <if test="blockchain != null">blockchain,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="experienceTaskCount != null">#{experienceTaskCount},</if>
            <if test="regularTaskCount != null">#{regularTaskCount},</if>
            <if test="hiddenTaskCount != null">#{hiddenTaskCount},</if>
            <if test="minimumWithdrawalAmount != null">#{minimumWithdrawalAmount},</if>
            <if test="blockchain != null">#{blockchain},</if>
         </trim>
    </insert>

    <update id="updateTkUserDefault" parameterType="TkUserDefault">
        update tk_user_default
        <trim prefix="SET" suffixOverrides=",">
            <if test="experienceTaskCount != null">experience_task_count = #{experienceTaskCount},</if>
            <if test="regularTaskCount != null">regular_task_count = #{regularTaskCount},</if>
            <if test="hiddenTaskCount != null">hidden_task_count = #{hiddenTaskCount},</if>
            <if test="minimumWithdrawalAmount != null">minimum_withdrawal_amount = #{minimumWithdrawalAmount},</if>
            <if test="blockchain != null">blockchain = #{blockchain},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteTkUserDefaultById" parameterType="Long">
        delete from tk_user_default where id = #{id}
    </delete>

    <delete id="deleteTkUserDefaultByIds" parameterType="String">
        delete from tk_user_default where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>